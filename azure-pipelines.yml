trigger:
- develop

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: UseNode@2
      inputs:
        versionSpec: '12.x'
    - script: npm install
    - script: npm run build
    - task: SonarQubePrepare@4
      inputs:
        SonarQube: 'SonarQubeConnection'
        scannerMode: 'CLI'
        configMode: 'file'
    - task: SonarQubeAnalyze@4
    - task: SonarQubePublish@4

- stage: DeployToDev
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployDev
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'Desplegando a Dev...'

- stage: DeployToRelease
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployRelease
    environment: 'Release'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo 'Desplegando a Release...'

- stage: DeployToProduction
  dependsOn: DeployToRelease
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployProd
    environment: 'Producción'
    strategy:
      runOnce:
        preDeploy:
          steps:
          - task: ManualValidation@0
            inputs:
              notifyUsers: 'user@empresa.com'
              instructions: 'Aprobar despliegue a producción'
        deploy:
          steps:
          - script: echo 'Desplegando a Producción...'
